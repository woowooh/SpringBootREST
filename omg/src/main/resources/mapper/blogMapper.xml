<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.omg.dao.BlogDAO">
    <resultMap id="BaseResultMap" type="com.omg.po.Blog" >
        <id column="blog_id" property="blogId" jdbcType="BIGINT" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="author_name" property="authorName" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
    </resultMap>

    <sql id="Base_Column_List" >
        blog_id, title, content, author_name, user_id
    </sql>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        from blog_t where is_delete = 0;
    </select>

    <select id="findById" resultMap="BaseResultMap" parameterType="long">
        SELECT
        <include refid="Base_Column_List" />
        from blog_t where blog_id = #{blogId} and is_delete = 0;
    </select>

    <insert id="addOne" parameterType="com.omg.po.Blog">
        INSERT into blog_t (title, content, author_name, user_id, blog_id)
        values (#{title}, #{content}, #{authorName}, #{userId}, #{blogId});
    </insert>

    <update id="updateOne" parameterType="com.omg.po.Blog">
        UPDATE blog_t
            SET
            title = #{title},
            content = #{content}
        where blog_id = #{blogId} and is_delete = 0;
    </update>

    <update id="deleteById" parameterType="long">
        UPDATE blog_t
        SET is_delete = 1
        where blog_id = #{blogId} and is_delete = 0;
    </update>
</mapper>